/**
* Copyright (c) 2018, SOW (https://www.safeonline.world). (https://github.com/RKTUXYN) All rights reserved.
* @author {SOW}
* Copyrights licensed under the New BSD License.
* See the accompanying LICENSE file for terms.
*/

function _print( str ) {
    context.response.write( str );
}
function extend_prototype( func, iobj ) {
    let this_proto = {};
    infinity.call( this_proto, "prototype", func.prototype );
    return this_proto;
}
function _get_func_desc( name, func, iobj ) {
    if ( !func ) return name;
    if ( Object.keys( func.prototype ).length > 0 ) return extend_prototype( func, iobj );
    let tos = func.toString();
    if ( tos.indexOf( "[native code]" ) > -1 ) return tos;
    return `function ${name}() { [internal js function] }`;
}
context.response.header( "Content-Type", "application/json" );
function infinity( prop, iobj ) {
    let type = typeof ( iobj );
    if ( type === 'function' ) {
        this[iobj.name || prop] = _get_func_desc( ( iobj.name || prop ), iobj );
        return;
    }
    if ( type === 'string' || type === 'number' || type === 'boolean' ) {
        this[prop] = iobj;
        return;
    }
    if ( type === 'object' ) {
        this[prop] = {};
        for ( let p in iobj ) {
            type = typeof ( iobj[p] );
            if ( type == 'string' || type == 'number' || type === 'boolean' ) {
                this[prop][p] = iobj[p]; continue;
            }
            infinity.call( this[prop], p, iobj[p] );
        }
    }
    return;

};
let obj = {};
for ( let p in this ) {
    if ( p === "infinity" || p === "_print" || p === "_get_func_desc" || p ==="extend_prototype" ) continue;
    if ( typeof ( this[p] ) === 'function' ) {
        obj[this[p].name || p] = _get_func_desc( ( this[p].name || p ), this[p] );
        continue;
    }
    obj[p] = {};
    infinity.call( obj, p, this[p] );
};
obj["context"] = {};
infinity.call( obj, "context", context )
_print( JSON.stringify( obj ) );
